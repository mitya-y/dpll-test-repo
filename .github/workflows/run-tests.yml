name: Test compilation and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest]
        build_type: [Release, Debug]
        c_compiler: [gcc]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            build_type: Debug
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            build_type: Release

    steps:
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Try update gcc
      run: |
        gcc --version
        sudo apt update && sudo apt install gcc-14
        gcc --version

    - name: Download sourse code
      run: |
        cd ${{ github.workspace }}
        git clone https://github.com/mitya-y/dpll-test-repo .

    - name: Download Googletests
      run: |
        cd tests
        bash ./install_gtests.sh
        cd ..

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
              -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..

        # cmake -B ${{ steps.strings.outputs.build-output-dir }}
        # -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        # -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        # -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        # -S ${{ github.workspace }}

    - name: Build
      run: |
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Run tests
      run: |
        cd build
        cp -r ../tests/files .
        ./dpll
